{
  "resourceType": "Library",
  "id": "ANCDT05",
  "text": {
    "status": "extensions",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b style=\"color: maroon\">Exception generating Narrative: Unable to Parse HTML - node 'th' has unexpected content ' ' (last text = 'Should Evaluate labour ' at line 164 column 49</b></p></div>"
  },
  "extension": [
    {
      "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
      "valueReference": {
        "reference": "Device/cqf-tooling"
      }
    }
  ],
  "url": "http://fhir.org/guides/who/anc-cds/Library/ANCDT05",
  "identifier": [
    {
      "use": "official",
      "value": "ANC.DT.05"
    }
  ],
  "version": "0.3.0",
  "name": "ANCDT05",
  "title": "ANC.DT.05 Evaluating labour",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "date": "2022-08-22T21:51:39+00:00",
  "publisher": "World Health Organization (WHO)",
  "contact": [
    {
      "telecom": [
        {
          "system": "url",
          "value": "https://www.who.int"
        }
      ]
    }
  ],
  "description": "During a cervical exam, if cervical dilation is greater than 2 cm evaluate the possibility of labour",
  "jurisdiction": [
    {
      "coding": [
        {
          "system": "http://unstats.un.org/unsd/methods/m49/m49.htm",
          "code": "001"
        }
      ]
    }
  ],
  "relatedArtifact": [
    {
      "type": "depends-on",
      "display": "FHIR model information",
      "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
    },
    {
      "type": "depends-on",
      "display": "Library FHIRHelpers",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/FHIRHelpers|4.0.1"
    },
    {
      "type": "depends-on",
      "display": "Library Config",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConfig"
    },
    {
      "type": "depends-on",
      "display": "Library Cx",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCConcepts"
    },
    {
      "type": "depends-on",
      "display": "Library PatientData",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCDataElements"
    },
    {
      "type": "depends-on",
      "display": "Library ContactData",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/ANCContactDataElements"
    },
    {
      "type": "depends-on",
      "display": "Library WC",
      "resource": "http://fhir.org/guides/who/anc-cds/Library/WHOCommon"
    },
    {
      "type": "depends-on",
      "display": "Value set Cervical dilation",
      "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b8-de93"
    },
    {
      "type": "depends-on",
      "display": "Value set Gestational age",
      "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b6-de17"
    }
  ],
  "parameter": [
    {
      "name": "Patient",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "Patient"
    },
    {
      "name": "Should Evaluate labour > 37 weeks",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "boolean"
    },
    {
      "name": "Should Evaluate labour < 37 week",
      "use": "out",
      "min": 0,
      "max": "1",
      "type": "boolean"
    }
  ],
  "dataRequirement": [
    {
      "type": "Patient",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Patient"
      ]
    },
    {
      "type": "Observation",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Observation"
      ],
      "mustSupport": [
        "code",
        "encounter.reference",
        "encounter",
        "status"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b6-de17"
        }
      ]
    },
    {
      "type": "Observation",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Observation"
      ],
      "mustSupport": [
        "code",
        "encounter.reference",
        "encounter",
        "status"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b8-de93"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ]
    }
  ],
  "content": [
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBBTkNEVDA1DQoNCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnDQoNCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnDQoNCmluY2x1ZGUgQU5DQ29uZmlnIGNhbGxlZCBDb25maWcNCmluY2x1ZGUgQU5DQ29uY2VwdHMgY2FsbGVkIEN4DQppbmNsdWRlIEFOQ0RhdGFFbGVtZW50cyBjYWxsZWQgUGF0aWVudERhdGENCmluY2x1ZGUgQU5DQ29udGFjdERhdGFFbGVtZW50cyBjYWxsZWQgQ29udGFjdERhdGENCg0KY29udGV4dCBQYXRpZW50DQoNCi8qDQooIkNlcnZpY2FsIGRpbGF0aW9uIiA+IDIgY20pDQogIEFORCAoIkdlc3RhdGlvbmFsIGFnZSIgPiAzNyB3ZWVrcykNCiovDQpkZWZpbmUgIlNob3VsZCBFdmFsdWF0ZSBsYWJvdXIgPiAzNyB3ZWVrcyI6DQogIENvbnRhY3REYXRhLiJDZXJ2aWNhbCBkaWxhdGlvbiIgPiAyICdjbScNCiAgICBhbmQgQ29udGFjdERhdGEuIkdlc3RhdGlvbmFsIGFnZSIgPj0gMzcgJ3dlZWtzJw0KDQovKg0KKCJDZXJ2aWNhbCBkaWxhdGlvbiIgPiAyY20pDQogIEFORCAoIkdlc3RhdGlvbmFsIGFnZSIgPCAzNyB3ZWVrcykNCiovDQpkZWZpbmUgIlNob3VsZCBFdmFsdWF0ZSBsYWJvdXIgPCAzNyB3ZWVrIjoNCiAgQ29udGFjdERhdGEuIkNlcnZpY2FsIGRpbGF0aW9uIiA+IDIgJ2NtJw0KICAgIGFuZCBDb250YWN0RGF0YS4iR2VzdGF0aW9uYWwgYWdlIiA8IDM3ICd3ZWVrcycNCg=="
    },
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "application/elm+json",
      "data": ""
    }
  ]
}